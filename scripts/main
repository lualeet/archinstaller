#!/bin/sh
if [ -d /tmp/scripts ]; then
	cd /tmp || exit 1
	. /tmp/scripts/colors
else
	printf "no scripts folder, exploding\n"
	exit 1
fi;

if [ "$(whoami)" = "root" ]; then
	echo "${attention}  -> ${nc}ran as root, not good for configs"
	usercount=$(($(find /home -maxdepth 1 | wc -l) - 1))
	if [ "$usercount" = 1 ]; then
		user=$(ls /home/)
		echo "${status}  -> ${nc}one user found, continuing as${gold} $user ${nc}"
		roothome=$HOME
		export HOME="/home/$user"
		sudo -u "$user" sh -c "cd /home/$user/; /tmp/scripts/main"
		export HOME=$roothome
		exit
	else
		echo "${error}  -> ${nc}too many (or no) non-root users found, stopping"
		exit 1
	fi;
else
	echo "${status}  -> ${nc}running as${gold} $(whoami) ${nc}"
fi;

if ! [ -d /tmp/scripts ]; then
	cp -r scripts "/tmp/"
fi;

getdep() {
	aurhelper="sudo pacman"
	if [ -f /usr/bin/yay ]; then
		aurhelper=yay
	fi;

	echo "${status}  -> ${nc}checking dependency${gold} $1 ${nc}"

	eval $aurhelper -S "$(echo "${1}" | sed "s/, / /g")" --noconfirm --needed
}

announce() {
	echo "${status}  -> ${nc}configuring${gold} $1 ${nc}"
	cd "/scripts/config/$1" || exit
	. "/scripts/config/$1/start"
	echo "${status}  -> ${nc}finished${gold} $1 ${nc}"
}

announce yay
announce configure
announce tmux
announce zsh
announce zsh-plugins

announce picom
announce dunst
announce i3
announce xorg
announce kvantum
announce powerline

announce ssh
announce emacs
announce libreoffice

announce junk

echo "${status}  -> ${nc}fixing sudoers lol"
sudo sed -i "s/\(.[^ ]*\) ALL=(ALL) NOPASSWD:ALL/\1 ALL=(ALL) ALL/" /etc/sudoers
