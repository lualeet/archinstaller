#!/bin/sh
source scripts/colors

if [ `whoami` = "root" ]; then
	echo "${attention}  -> ${nc}ran as root, not good for configs"
	usercount=`ls /home/ | wc -l`
	if [ $usercount = 1 ]; then
		user=`ls /home/`
		echo "${status}  -> ${nc}one user found, continuing as${gold} $user ${nc}"
		if [ -d /tmp/scripts ]; then
			rm -rf /tmp/scripts
		fi;
		cp -r scripts "/tmp/"
		roothome=$HOME
		export HOME="/home/$user"
		sudo -u $user sh -c "cd /home/$user/; /tmp/scripts/main"
		export HOME=$roothome
		exit
	else
		echo "${error}  -> ${nc}too many (or no) non-root users found, stopping"
		exit 1
	fi;
else
	echo "${status}  -> ${nc}running as${gold} `whoami` ${nc}"
fi;

if ! [ -d /tmp/scripts ]; then
	cp -r scripts "/tmp/"
fi;

getdep() {
	aurhelper="sudo pacman"
	if [ -f /usr/bin/yay ]; then
		aurhelper=yay
	fi;

	echo "${status}  -> ${nc}checking dependency${gold} $1 ${nc}"

	eval $aurhelper -S `echo $1 | sed "s/, / /g"` --noconfirm --needed
}

announce() {
	echo "${status}  -> ${nc}configuring${gold} $1 ${nc}"
	cd "/tmp/scripts/config/$1"
	i=0
	while [ $i = 0 ]; do
		i=1
		trap "echo ${error}  -> ${nc}script${gold} $1 ${nc}errored; break" ERR
		source `pwd`/start
	done
	trap - ERR
	echo "${status}  -> ${nc}finished${gold} $1 ${nc}"
	cd "/tmp/scripts"
}

announce yay
announce configure
announce tmux
announce zsh
announce zsh-plugins

announce picom
announce dunst
announce i3
announce xorg
announce kvantum
announce powerline

announce junk
cleanup

